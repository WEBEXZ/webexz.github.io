{"name":"WeBexZ","tagline":"Learning different programming styles.","body":"# Programación Funcional.\r\n\r\nAlonzo Church desarrolló un sistema formal llamado Cálculo Lambda, el cual se basa en funciones que toman otras funciones como argumentos, y que devuelven funciones como resultado. La función se identifica con la letra griega Lambda(λ).\r\n\r\nLa primer máquina que resolvía tablas de balística fue Mark I. El Cálculo Lambda y la máquina de Turing son equivalentes en potencia.\r\n\r\nLo que importa o es relevante en todo momento son los argumentos y los retornos, no hay variables mutables, esto quiere decir, que no puede cambiar su valor. Los programas funcionales pueden mantener un estado(aunque Alonzo Church no pensó hacerlo de esa forma o que tuviera esa perspectiva), para ello podemos hacer uso de la recursividad.\r\n\r\nSus actualizaciones son rápidas de hacer, con Tail Recursion podemos optimizar recursos.\r\n\r\nFunciones de orden superior, son aquellas funciones que operan sobre otras funciones, con ello podemos hacer que tengan un comportamiento diferente en diversos escenarios/aspectos, Currying(Currificando), es como una \"envoltura\" de otras funciones `g(x)(y) = x + y`.\r\n\r\nEvaluación tardía, es llamar a una función solo cuando sea necesaria, para asignarle un orden empleamos continuaciones(CPS).\r\n\r\n**No pueden causar efectos colaterales(lenguaje funcional puro).\r\n***","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}